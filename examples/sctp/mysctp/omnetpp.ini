[General]

**.testing = true
**.testTimeout = 0
network = multihomed

sim-time-limit = 1min
# cpu-time-limit = 3s


# udp app (off) {{{
**.numUdpApps = 0
# **.udpAppType = "UDPApp"

# tcp app (off)
**.numTcpApps = 0
**.sctp_client.tcpApp[*].typename = "TCPBasicClientApp"
**.sctp_server.tcpApp[*].typename = "TCPSinkApp"

# }}}

################
# sctp apps
################

**.sctpApp[*].ordered = false

# Client {{{
**.sctp_client.numSctpApps = 1
**.sctp_client.sctpApp[*].localAddress = "10.1.1.1 10.2.1.1"

**.sctp_client.sctpApp[0].typename = "SCTPClient"
**.sctp_client.sctpApp[*].connectAddress = "10.1.3.1"
**.sctp_client.sctpApp[*].primaryPath = "10.1.3.1"
**.sctp_client.sctpApp[0].connectPort = 6666
**.sctp_client.sctpApp[0].startTime = 0s # truncnormal(1s,0.2s)
#**.sctp_client.sctpApp[0].stopTime = 3s # truncnormal(60s,10s)
**.sctp_client.sctpApp[0].outboundStreams = 1
**.sctp_client.sctpApp[0].queueSize = 100

**.sctp_client.sctpApp[0].numRequestsPerSession = 300
**.sctp_client.sctpApp[0].requestLength = 14000
**.sctp_client.sctpApp[0].thinkTime = 0.042s
# streamRequestLengths
# streamRequestRatio


**.sctp_client.sctpApp[0].sentPk.result-recording-modes = +histogram(packetBytes)

# }}}
# Server {{{
**.sctp_server.numSctpApps = 1
**.sctp_server.sctpApp[0].typename = "SCTPServer"
**.sctp_server.sctpApp[*].localAddress = "10.1.3.1 10.2.3.1"
**.sctp_server.sctpApp[0].localPort = 6666
**.sctp_server.sctpApp[*].outboundStreams = 1
**.sctp_server.sctpApp[*].readingInterval = 0
**.sctp_server.sctpApp[*].bytesToPush = 0
**.sctp_server.sctpApp[*].queueSize = 0 #Size of sendQueue before App is notified to send new data
**.sctp_server.sctpApp[*].numPacketsToSendPerClient = 0
**.sctp_server.sctpApp[*].numPacketsToReceivePerClient = 0
**.sctp_server.sctpApp[*].finishEndsSimulation = true

**.sctp_server.sctp.sackFrequency = 1
**.sctp_server.sctp.sctpAlgorithmClass = "SCTPAlg"

# }}}

#################
# sctp settings {{{
**.sctp.numGapReports = 3
**.sctp.rtoMin = 1s #default 1
**.sctp.rtoMax = 60s #default 60
**.sctp.rtoInitial = 3s   #default 3
**.sctp.assocMaxRetrans = 10
**.sctp.pathMaxRetrans = 5 #default 5
**.sctp.maxInitRetrans = 8
**.sctp.hbInterval = 30s #default 30
**.sctp.osbWithHeader = false  #default false
**.sctp.padding = false
**.sctp.reactivatePrimaryPath = false
**.sctp.validCookieLifetime = 10s
**.sctp.arwnd = 65535
**.sctp.auth = false
**.sctp.addIP = false
**.sctp.addTime = 0
**.sctp.addAddress = ""
**.sctp.addIpType = "0"
**.sctp.chunks = ""
**.sctp.packetDrop = false   # pkgdrop reporting RFC...
**.sctp.nrSack = true


# TODO
**.sctp.RTXMethod=0  # Always after 3 Sacks > PR!

**.sctp.sackPeriod = 0.2s # less? or send I-Flag on last chunk?
**.sctp.nagleEnabled = false # > disable ???
**.sctp.naglePoint = 1468
**.sctp.maxBurst = 15 # TODO: maxBurstVariant disabled for CMT due to possible SACK reordering.
**.sctp.maxBurstVariant = "maxBurst"
**.sctp.fragment = true
**.sctp.fragPoint = 1400

**.sctp.strictCwndBooking = true

# }}}
# SCTP PR: {{{

# }}}
# PF-SCTP {{{

# }}}

################
# Routing {{{
**.sctp_client.routingTable.routingFile = "multi_client.mrt"
**.sctp_server.routingTable.routingFile = "multi_server.mrt"
# **.router1.routingTable.routingFile = "multi_router1.mrt"
# **.router2.routingTable.routingFile = "multi_router2.mrt"

# }}}

# Channels {{{
# **.channel.result-recording-modes = all

# }}}
# ping app (off) {{{
**.pingApp.destAddr = ""
**.pingApp.srcAddr = ""
**.pingApp.packetSize = 56B
**.pingApp.interval = 1s
**.pingApp.hopLimit = 32
**.pingApp.count = 0
**.pingApp.startTime = 1s
**.pingApp.stopTime = 0
**.pingApp.printPing = true
#**.pingApp.generationTime = 0
# }}}
# tcp settings > for what ? {{{
**.tcp.mss = 1024
**.tcp.advertisedWindow = 65535 #14336  # 14*mss
**.tcp.sendQueueClass = "TCPVirtualDataSendQueue" #"TCPMsgBasedSendQueue"
**.tcp.receiveQueueClass = "TCPVirtualDataRcvQueue" #"TCPMsgBasedRcvQueue"
#**.tcp.tcpAlgorithmClass="DummyTCPAlg"
**.tcp.tcpAlgorithmClass = "TCPReno"
**.tcp.recordStats = true

# }}}
# NIC configuration > Router {{{
**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 100  # in routers
**.ppp[*].ppp.mtu = 1500 B

**.ext[*].filterString = "sctp"
**.ext[*].device = eth0

# }}}

# Statistics TODO {{{
**.vector-recording = true
**.result-recording-modes = all # turn on result recording

# }}}

[Config Default]

[Config CMT]   # {{{
**.cmtCCVariant                   = "cmt"   # Activate CMT
**.cmtCUCVariant                  = "pseudoCumAckV2"

# }}}

[Config BufferSplitRP]
**.cmtCCVariant                   = "cmt"   # Activate CMT
**.cmtCUCVariant                  = "pseudoCumAckV2"

**.cmtBufferSplitVariant = "bothSides"
**.cmtBufferSplittingUsesOSB = true

[Config period_big_frames]
**.cmtCCVariant                   = "cmt"   # Activate CMT
**.cmtCUCVariant                  = "pseudoCumAckV2"
#**.cmtBufferSplitVariant = "bothSides"
#**.cmtBufferSplittingUsesOSB = true

**.sctp_client.sctpApp[0].numRequestsPerSession = 100
**.sctp_client.sctpApp[0].requestLength = 14000
**.sctp_client.sctpApp[0].thinkTime = 0.042s





